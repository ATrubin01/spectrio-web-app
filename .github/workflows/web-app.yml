name: spectrio-web-app

on:
  push:
    branches:
      - main  
      - dev
      - staging

permissions:
  id-token: write
  contents: read
env:
  ENVIRONMENT_STAGE: ${{ (github.ref == 'refs/heads/main' && 'prod') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ (github.ref == 'refs/heads/main' && 'production') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}
          role-session-name: githubactionssession
          aws-region: "us-east-1"

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          REPOSITORY: spectrio-web-app
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ./
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

# Login to EKS
      - name: Login to EKS - update kubeconfig
        run: |
          aws eks update-kubeconfig --name spectrio-cluster-dev --region us-east-1

# Apply the Kubernetes manifests
      - name: Deploy to EKS
        run: |
          kubectl apply -f ./deployment.yaml

# Update the Image in the Deployment
      - name: Update the Image in the Deployment
        run: |
          kubectl set image deployment/spectrio-web-app spectrio-web-app=$REGISTRY/$REPOSITORY:$IMAGE_TAG --record

